version: 0.2

# 環境変数
env:
  variables:
    APP_NAME: "my-python-app"
    PYTHON_VERSION: "3.9"
    
phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo "ビルド依存関係をインストールしています..."
      - pip3 install --upgrade pip setuptools wheel
      - echo "Pythonバージョン:" $(python3 --version)
      - echo "pipバージョン:" $(pip3 --version)
      
  pre_build:
    commands:
      - echo "プリビルドフェーズを開始しました:" $(date)
      - echo "現在のディレクトリ:" $(pwd)
      - echo "ディレクトリ内のファイル:" $(ls -la)
      
      # 構文チェック
      - echo "Python構文をチェックしています..."
      - python3 -m py_compile sampl-app.py
      - echo "構文チェックが完了しました"
      
      # 依存関係のインストール（requirements.txtがある場合）
      - |
        if [ -f "requirements.txt" ]; then
          echo "Python依存関係をインストールしています..."
          pip3 install -r requirements.txt
          echo "依存関係のインストールが完了しました"
        else
          echo "requirements.txtが見つかりません。依存関係のインストールをスキップします"
        fi
      
  build:
    commands:
      - echo "ビルドフェーズを開始しました:" $(date)
      
      # テストの実行
      - echo "テストを実行しています..."
      - |
        if [ -f "test_app.py" ]; then
          echo "基本テストを実行中..."
          python3 test_app.py
          echo "テストが正常に完了しました"
        else
          echo "テストファイルが見つかりません。テスト実行をスキップします"
        fi
      
      # バージョン情報ファイルの作成
      - echo "バージョン情報を作成しています..."
      - echo "{\"build_time\":\"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",\"commit\":\"$CODEBUILD_RESOLVED_SOURCE_VERSION\"}" > version.json
      
      - echo "ビルドフェーズが正常に完了しました"
      
  post_build:
    commands:
      - echo "ポストビルドフェーズを開始しました:" $(date)
      - echo "デプロイメント成果物を準備しています..."
      - echo "最終ディレクトリの内容:"
      - ls -la
      - echo "ポストビルドフェーズが完了しました"

# ビルド成果物
artifacts:
  files:
    - '**/*'
  name: $APP_NAME-build-$(date +%Y%m%d-%H%M%S)
  
# キャッシュ（オプション、ビルド高速化用）
cache:
  paths:
    - '/root/.cache/pip/**/*'